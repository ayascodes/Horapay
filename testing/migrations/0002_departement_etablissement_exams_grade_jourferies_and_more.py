# Generated by Django 5.0.6 on 2024-05-17 19:34

import django.db.models.deletion
import testing.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('testing', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Departement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(choices=[('Cycle préparatoire', 'Cycle préparatoire'), ('Cycle supérieur', 'Cycle supérieur')], default='Cycle préparatoire', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Etablissement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_fr', models.CharField(max_length=100)),
                ('nom_ar', models.CharField(max_length=100)),
                ('ministere_fr', models.CharField(max_length=100)),
                ('ministere_ar', models.CharField(max_length=100)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/')),
            ],
        ),
        migrations.CreateModel(
            name='Exams',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datedebut', models.DateField()),
                ('datefin', models.DateField()),
                ('description', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=20)),
                ('prix_heure', models.IntegerField()),
                ('couleur', models.CharField(default=None, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='JourFeries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datedebut', models.DateField()),
                ('datefin', models.DateField()),
                ('description', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaxHeureSup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_charge', models.PositiveIntegerField()),
                ('max_supp', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Semestre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee_academique', models.CharField(max_length=9, validators=[testing.validators.validate_academic_year_format])),
                ('numero_de_semestre', models.IntegerField(choices=[(1, '1'), (2, '2')], default=1)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Specialite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(default='null', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datedebut', models.DateField()),
                ('datefin', models.DateField()),
                ('description', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Type_seance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Type', models.CharField(choices=[('Enseignant', 'Enseignant'), ('Administrateur', 'Administrateur')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Vacation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datedebut', models.DateField()),
                ('datefin', models.DateField()),
                ('description', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='user',
        ),
        migrations.RenameField(
            model_name='customuser',
            old_name='phone_number',
            new_name='numero_telephone',
        ),
        migrations.RemoveField(
            model_name='customuser',
            name='date_of_birth',
        ),
        migrations.RemoveField(
            model_name='customuser',
            name='first_name',
        ),
        migrations.RemoveField(
            model_name='customuser',
            name='gender',
        ),
        migrations.RemoveField(
            model_name='customuser',
            name='last_name',
        ),
        migrations.RemoveField(
            model_name='customuser',
            name='username',
        ),
        migrations.AddField(
            model_name='customuser',
            name='Photo_profil',
            field=models.ImageField(blank=True, null=True, upload_to='photo_profil/'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='RIB',
            field=models.CharField(max_length=10, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='UserType',
            field=models.CharField(max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='annee',
            field=models.IntegerField(choices=[(1923, '1923'), (1924, '1924'), (1925, '1925'), (1926, '1926'), (1927, '1927'), (1928, '1928'), (1929, '1929'), (1930, '1930'), (1931, '1931'), (1932, '1932'), (1933, '1933'), (1934, '1934'), (1935, '1935'), (1936, '1936'), (1937, '1937'), (1938, '1938'), (1939, '1939'), (1940, '1940'), (1941, '1941'), (1942, '1942'), (1943, '1943'), (1944, '1944'), (1945, '1945'), (1946, '1946'), (1947, '1947'), (1948, '1948'), (1949, '1949'), (1950, '1950'), (1951, '1951'), (1952, '1952'), (1953, '1953'), (1954, '1954'), (1955, '1955'), (1956, '1956'), (1957, '1957'), (1958, '1958'), (1959, '1959'), (1960, '1960'), (1961, '1961'), (1962, '1962'), (1963, '1963'), (1964, '1964'), (1965, '1965'), (1966, '1966'), (1967, '1967'), (1968, '1968'), (1969, '1969'), (1970, '1970'), (1971, '1971'), (1972, '1972'), (1973, '1973'), (1974, '1974'), (1975, '1975'), (1976, '1976'), (1977, '1977'), (1978, '1978'), (1979, '1979'), (1980, '1980'), (1981, '1981'), (1982, '1982'), (1983, '1983'), (1984, '1984'), (1985, '1985'), (1986, '1986'), (1987, '1987'), (1988, '1988'), (1989, '1989'), (1990, '1990'), (1991, '1991'), (1992, '1992'), (1993, '1993'), (1994, '1994'), (1995, '1995'), (1996, '1996'), (1997, '1997'), (1998, '1998'), (1999, '1999'), (2000, '2000'), (2001, '2001'), (2002, '2002'), (2003, '2003'), (2004, '2004'), (2005, '2005'), (2006, '2006'), (2007, '2007'), (2008, '2008'), (2009, '2009'), (2010, '2010'), (2011, '2011'), (2012, '2012'), (2013, '2013'), (2014, '2014'), (2015, '2015'), (2016, '2016'), (2017, '2017'), (2018, '2018'), (2019, '2019'), (2020, '2020'), (2021, '2021'), (2022, '2022'), (2023, '2023'), (2024, '2024')], default=1),
        ),
        migrations.AddField(
            model_name='customuser',
            name='ccp',
            field=models.CharField(max_length=10, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='charge_actuel',
            field=models.IntegerField(null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='cle',
            field=models.CharField(max_length=2, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='education',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='full_name',
            field=models.CharField(default=None, max_length=50),
        ),
        migrations.AddField(
            model_name='customuser',
            name='heure_sup_actuel',
            field=models.IntegerField(null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='is_admin',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='customuser',
            name='jour',
            field=models.IntegerField(choices=[(1, '1 days'), (2, '2 days'), (3, '3 days'), (4, '4 days'), (5, '5 days'), (6, '6 days'), (7, '7 days'), (8, '8 days'), (9, '9 days'), (10, '10 days'), (11, '11 days'), (12, '12 days'), (13, '13 days'), (14, '14 days'), (15, '15 days'), (16, '16 days'), (17, '17 days'), (18, '18 days'), (19, '19 days'), (20, '20 days'), (21, '21 days'), (22, '22 days'), (23, '23 days'), (24, '24 days'), (25, '25 days'), (26, '26 days'), (27, '27 days'), (28, '28 days'), (29, '29 days'), (30, '30 days')], default=1986),
        ),
        migrations.AddField(
            model_name='customuser',
            name='mois',
            field=models.CharField(choices=[('01', 'Janvier'), ('02', 'Février'), ('03', 'Mars'), ('04', 'Avril'), ('05', 'Mai'), ('06', 'Juin'), ('07', 'Juillet'), ('08', 'Août'), ('09', 'Septembre'), ('10', 'Octobre'), ('11', 'Novembre'), ('12', 'Décembre')], default=1, max_length=10),
        ),
        migrations.AddField(
            model_name='customuser',
            name='nom',
            field=models.CharField(default=None, max_length=20),
        ),
        migrations.AddField(
            model_name='customuser',
            name='prenom',
            field=models.CharField(default=None, max_length=20),
        ),
        migrations.AddField(
            model_name='customuser',
            name='reset_password_token',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='responsable',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='customuser',
            name='sexe',
            field=models.CharField(choices=[('Homme', 'Homme'), ('Femme', 'Femme')], default='Homme', max_length=10),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='email',
            field=models.EmailField(max_length=254, unique=True),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='is_active',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='Absence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datedebut', models.DateField()),
                ('datefin', models.DateField()),
                ('description', models.CharField(max_length=100)),
                ('is_justified', models.BooleanField(default=False)),
                ('enseignant', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='grade',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='testing.grade'),
        ),
        migrations.CreateModel(
            name='Promo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=20, null=True)),
                ('departement', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='testing.departement')),
                ('specialite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='testing.specialite')),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=20)),
                ('credit', models.IntegerField()),
                ('coefficient', models.IntegerField()),
                ('promo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testing.promo')),
                ('semestre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testing.semestre')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=10)),
                ('sender', models.ForeignKey(limit_choices_to={'is_admin': False}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Salle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_salle', models.CharField(choices=[('AMPHI', 'Amphitheatre'), ('TP', 'Salle Tp'), ('TD', 'Salle Td')], default='Amphitheatre', max_length=20)),
                ('nom_salle', models.CharField(max_length=50)),
                ('capacite', models.PositiveIntegerField()),
                ('departement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testing.departement')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=1)),
                ('promo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testing.promo')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_du_group', models.IntegerField()),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testing.section')),
            ],
        ),
        migrations.CreateModel(
            name='sessions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heure_debut', models.IntegerField(blank=True, null=True)),
                ('heure_fin', models.IntegerField(blank=True, null=True)),
                ('selectedDay', models.CharField(blank=True, choices=[('Samedi', 'Samedi'), ('Dimanche', 'Dimanche'), ('Lundi', 'Lundi'), ('Mardi', 'Mardi'), ('Mercredi', 'Mercredi'), ('Jeudi', 'Jeudi')], default='Dimanche', max_length=10, null=True)),
                ('date', models.DateField(null=True)),
                ('Departement', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='testing.departement')),
                ('Promo', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='testing.promo')),
                ('Section', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='testing.section')),
                ('enseignant', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='testing.group')),
                ('module', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='testing.module')),
                ('salle', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='testing.salle')),
                ('semestre', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='testing.semestre')),
                ('type_session', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='testing.type_seance')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='extra_session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heure_debut', models.IntegerField(blank=True, null=True)),
                ('heure_fin', models.IntegerField(blank=True, null=True)),
                ('date', models.DateField(null=True)),
                ('Departement', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='testing.departement')),
                ('enseignant', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='testing.group')),
                ('module', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='testing.module')),
                ('Promo', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='testing.promo')),
                ('salle', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='testing.salle')),
                ('Section', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='testing.section')),
                ('semestre', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='testing.semestre')),
                ('type_session', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='testing.type_seance')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Weekly_session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selectedOption', models.CharField(choices=[('Que pour une semaine', 'Que pour une semaine'), ('Pour le semestre', 'Pour le semestre')], default='Que pour une semaine', max_length=20)),
                ('selectedDay', models.CharField(blank=True, choices=[('Samedi', 'Samedi'), ('Dimanche', 'Dimanche'), ('Lundi', 'Lundi'), ('Mardi', 'Mardi'), ('Mercredi', 'Mercredi'), ('Jeudi', 'Jeudi')], default='Dimanche', max_length=10, null=True)),
                ('heure_supp', models.BooleanField(default=False)),
                ('heure_debut', models.IntegerField(blank=True, null=True)),
                ('heure_fin', models.IntegerField(blank=True, null=True)),
                ('Departement', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='testing.departement')),
                ('Promo', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='testing.promo')),
                ('Section', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='testing.section')),
                ('enseignant', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='testing.group')),
                ('module', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='testing.module')),
                ('salle', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='testing.salle')),
                ('semestre', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='testing.semestre')),
                ('type_session', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='testing.type_seance')),
            ],
        ),
        migrations.CreateModel(
            name='weekly_session_new',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heure_debut', models.IntegerField(blank=True, null=True)),
                ('heure_fin', models.IntegerField(blank=True, null=True)),
                ('selectedDay', models.CharField(blank=True, choices=[('Samedi', 'Samedi'), ('Dimanche', 'Dimanche'), ('Lundi', 'Lundi'), ('Mardi', 'Mardi'), ('Mercredi', 'Mercredi'), ('Jeudi', 'Jeudi')], default='Dimanche', max_length=10, null=True)),
                ('Departement', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='testing.departement')),
                ('Promo', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='testing.promo')),
                ('Section', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='testing.section')),
                ('enseignant', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='testing.group')),
                ('module', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='testing.module')),
                ('salle', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='testing.salle')),
                ('semestre', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='testing.semestre')),
                ('type_session', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='testing.type_seance')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.DeleteModel(
            name='Admin',
        ),
        migrations.DeleteModel(
            name='Teacher',
        ),
    ]
